export const windIcon = [
  [
    { c: 'M', p: [12, 5] },
    { c: 'V', p: [19.8615] },
  ],
  [
    { c: 'M', p: [10, 5] },
    { c: 'V', p: [19.8615] },
    { c: 'M', p: [10, 8] },
    { c: 'L', p: [14, 6] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [8, 9] },
    { c: 'L', p: [12, 7] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
    { c: 'M', p: [8, 11] },
    { c: 'L', p: [12, 9] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
    { c: 'M', p: [16, 7] },
    { c: 'L', p: [8, 11] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
    { c: 'M', p: [16, 7] },
    { c: 'L', p: [8, 11] },
    { c: 'M', p: [8, 13] },
    { c: 'L', p: [12, 11] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
    { c: 'M', p: [16, 7] },
    { c: 'L', p: [8, 11] },
    { c: 'M', p: [16, 9] },
    { c: 'L', p: [8, 13] },
    { c: 'M', p: [16, 11] },
    { c: 'L', p: [8, 15] },
  ],
  [
    { c: 'M', p: [16, 3] },
    { c: 'L', p: [8, 7] },
    { c: 'V', p: [21.8615] },
    { c: 'M', p: [16, 5] },
    { c: 'L', p: [8, 9] },
    { c: 'M', p: [16, 7] },
    { c: 'L', p: [8, 11] },
    { c: 'M', p: [16, 9] },
    { c: 'L', p: [8, 13] },
    { c: 'M', p: [8, 15] },
    { c: 'L', p: [12, 13] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [8, 10] },
    { c: 'L', p: [12, 8] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [8, 12] },
    { c: 'L', p: [12, 10] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
    { c: 'M', p: [8, 14] },
    { c: 'L', p: [12, 12] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
    { c: 'M', p: [16, 10] },
    { c: 'L', p: [8, 14] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
    { c: 'M', p: [16, 10] },
    { c: 'L', p: [8, 14] },
    { c: 'M', p: [8, 16] },
    { c: 'L', p: [12, 14] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
    { c: 'M', p: [16, 10] },
    { c: 'L', p: [8, 14] },
    { c: 'M', p: [16, 12] },
    { c: 'L', p: [8, 16] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [9] },
    { c: 'M', p: [16, 6] },
    { c: 'L', p: [8, 10] },
    { c: 'M', p: [16, 8] },
    { c: 'L', p: [8, 12] },
    { c: 'M', p: [16, 10] },
    { c: 'L', p: [8, 14] },
    { c: 'M', p: [16, 12] },
    { c: 'L', p: [8, 16] },
    { c: 'M', p: [8, 18] },
    { c: 'L', p: [12, 16] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [8.5] },
    { c: 'M', p: [8, 8.5] },
    { c: 'H', p: [16] },
    { c: 'L', p: [12, 10.5] },
    { c: 'L', p: [8, 12.5] },
    { c: 'V', p: [8.5] },
    { c: 'Z', p: [0] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [8.5] },
    { c: 'M', p: [8, 8.5] },
    { c: 'H', p: [16] },
    { c: 'L', p: [12, 10.5] },
    { c: 'L', p: [8, 12.5] },
    { c: 'V', p: [8.5] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 15] },
    { c: 'L', p: [12, 13] },
  ],
  [
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [20.8615] },
    { c: 'M', p: [8, 8] },
    { c: 'L', p: [12, 6] },
    { c: 'L', p: [16, 4] },
    { c: 'H', p: [8] },
    { c: 'V', p: [8] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [8, 8] },
    { c: 'V', p: [8.5] },
    { c: 'M', p: [8, 8.5] },
    { c: 'H', p: [16] },
    { c: 'L', p: [12, 10.5] },
    { c: 'L', p: [8, 12.5] },
    { c: 'V', p: [8.5] },
    { c: 'Z', p: [0] },
    { c: 'M', p: [16, 11] },
    { c: 'L', p: [12, 13] },
    { c: 'L', p: [8, 15] },
  ],
];
interface FeatherOption {
  size?: [number, number];
  color?: string;
}
/**获取风向标图标 */
export const getFeatherCanvas = (level: number, option?: FeatherOption) => {
  if (!option) option = {};
  const svg = windIcon[level];
  const width = 20,
    height = 20;
  const canvas = document.createElement('canvas');
  canvas.width = option.size ? option.size[0] : width;
  canvas.height = option.size ? option.size[1] : height;
  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;
  let befor: Array<number>;
  ctx.scale(canvas.width / width, canvas.height / height);
  ctx.strokeStyle = option.color ? option.color : 'black';
  ctx.translate(-2, -2);
  ctx.beginPath();
  svg.forEach((item) => {
    switch (item.c) {
      case 'M':
        ctx.moveTo(item.p[0], item.p[1]);
        befor = item.p;
        break;
      case 'V':
        ctx.lineTo(befor[0], item.p[0]);
        befor = [befor[0], item.p[0]];
        break;
      case 'L':
        ctx.lineTo(item.p[0], item.p[1]);
        befor = item.p;
        break;
      case 'H':
        ctx.lineTo(item.p[0], befor[1]);
        befor = [item.p[0], befor[1]];
        break;
      case 'Z':
        ctx.closePath();
        break;
      default:
        break;
    }
  });
  ctx.stroke();
  // ctx.fillStyle = 'rgb(0,0,0,0.2)';
  // ctx.fillRect(0, 0, canvas.width, canvas.height);
  return canvas;
};
/**获取风速等级 */
export const getWindLevel = (speed: number) => {
  if (speed <= 0) throw new Error('speed should larger than 0');
  const level = speed <= 1 ? 0 : Math.ceil(speed / 2);
  return level;
};
